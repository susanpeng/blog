{"pageProps":{"blognum":9,"key1":0,"slugprev":"complete_a_project","frontmatter":{"title":"Get Started with GitHub","date":"2022-01-25","lastmod":"2022-01-25","draft":"false","tags":["Howto","GitHub"],"categories":[""],"author":"Susan"},"slug":"complete_a_project","content":"<!--\nhiddenFromHomePage: true\nthis line can be added to the front matter to hide the md file to be displaied on the website.\n-->\n**Install git on the local computer**\n\nCheck if git has already been installed on my Mac:\n```shell\ngit --version\ngit version 2.30.1 (Apple Git-130)\n```\nI got \"git version 2.30.1 (Apple Git-130)\"; that means I have already got git installed on my Mac.\n\nIf you can see the version information, you need to download and install git on your computer.\n\n**Create a free GitHub account**\n\nGo to GitHub website and sign up to get a free GitHub account.\n\n**Config git on the local computer**\n\nAdd your GitHub email and username to git:\n```shell\ngit config --global user.email \"youremai@email.com\" \ngit config --global user.name \"your-git-username\"\n```\nCreate a project folder on the local computer to store your local version of the GitHub repository. You can use either of the following ways:\n\n- On your Desktop, create a folder git_202201 (you can use your desired folder name). \nPress CMD+shidt+n, and then change the new folder's name to git_202201.\n- Go to Terminal. From Terminal, goto desktop (Mac)\n\n    ```shell\n    cd /Users/your-username-on-mac/Desktop\n    mkdir git_202201\n    ```\nAfter creating the project folder (In this article, the folder is git_202201), open Terminal and enter the project folder:\n\n```shell\ncd git_202201\ngit init\n```\nNow, you have established the git folder on your computer, and it is connected to the content in your GitHub account on the GitHub website. \n\nTips: \"Command + Shift + . \" let you see the folder or file with . in the front of it (such as .git); it's a taogle command shortcut. Using the toggle shortcut, you can make the .git folder visible or invisible.\nCheck git status:\n```shell\ngit status\n```\nRemember, you're still under the folder of git_202201, NOT git_202201/.git.\nCreate a new file:\n```shell\ntouch file1.txt\n```\nCheck the status:\n```shell\ngit status\n```\nYou can see a new file is not on the stage.\nAdd the new file to the stage and check again:\n```shell\ngit add file1.txt\ngit status\n```\nYou can see the new file is on the stage in green. Under the line of \"Changes to be committed:\".\n\nCommit the new file to the main brunch, with the message \"added file1.txt\":\n```shell\ngit commit -m \"added file1.txt\"\ngit status\n```\nYou can see no file on the stage. All changes are committed.\n\nYou can't see the new file in GitHub repository until you run this line:\n```shell\ngit push\n```\n\n\n**Delete a file**\n\nYou don't need to delete a file or a folder from the Finder first. Just execute the following command:\n```shell\ngit rm filename(s)\n```\nWhen removing files, I found that I needed to write each filename, couldn't use wildcard *.\n\nCheck the status:\n```shell\ngit status\n```\nYou will see the list of deleted files; that are also changes needed to be committed.\n\nCommit the changes and push to the repo on GitHub:\n```shell\ngit commit -m \"files with filenames are deleted.\"\ngit push\n```\n**Get repository on GitHub to local computer**\n\nTo establish the connection between the GitHub repository and the local version of the same repository, you need to do one of the following two things according to your situation:\n\n- If you have all content on your local computer, you need to create a repository on GitHub and get its link; then execute the following command:\n    ```shell\n    git remote add origin https://github.com/yourusername/yourusername.github.io.git \n    ```\n    Here, we assume your repository's name is \"yourusername.github.io\".\n\n    Then you can push your changes to the repository on GitHub:\n    ```shell\n    git push -u origin master\n    ```\n    To see what you have done earlier:\n    ```shell\n    git log \n    ```\n    To see the command list for git:\n    ```shell\n    git --help\n    ``` \n- If you already have your repository on GitHub and have nothing on your local computer, you need to execute the following command:\n    ```shell\n    git clone https://github.com/yourusername/yourusername.github.io.git \n    ```\n    Then you will get the repository from the GitHub website to your local computer.\n    You can check if you have the remote repository on your local computer:\n    ```shell\n    git remote -v\n    ``` \n    After making changes:\n    ```shell\n    git add .\n    git commit -m \"message...\"\n    git push \n    ```\nWhen you push the first time, you need to use your **personal access token**. You need to go to the GutHub website to generated your **personal access token** to complete your first push.\n\n**Rename a repository**\n\nGo to the repository you want to rename. Go to Settings. Under Repository name, change the name, and then click Rename button. It is better to do \"git clone \"https:// ... address of new repository\" in a new folder, and later just delete the old folder of this repository on your local computer. If the repository is not too big, this will avoid lots of confusion.\n\n\n\n**Other command lines**\n\nTo stop tracking a file:\n```shell\ngit rm --cached <file>\n```\n\nThese are some basic commands to get you started. For more specific and detailed information, please refer to the documentation from the GitHub website."},"__N_SSG":true}